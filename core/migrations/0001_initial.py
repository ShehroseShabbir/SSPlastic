# Generated by Django 5.2.5 on 2025-08-18 11:28

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('contact_name', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(default='Pakistan', max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('cnic', models.CharField(blank=True, max_length=20)),
                ('phone', models.CharField(blank=True, max_length=30)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('salary', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('join_date', models.DateField(blank=True, null=True)),
                ('hire_date', models.DateField(blank=True, null=True)),
                ('contract_end_date', models.DateField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='employees/photos/')),
                ('contract_file', models.FileField(blank=True, null=True, upload_to='employees/contracts/')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Expense Categories',
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, default='', max_length=255)),
                ('company_address', models.TextField(blank=True, default='')),
                ('bank_details', models.TextField(blank=True, default='')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='branding/')),
                ('tax_label', models.CharField(blank=True, default='GST', max_length=20)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('email_backend', models.CharField(blank=True, default='', help_text='e.g. django.core.mail.backends.smtp.EmailBackend', max_length=200)),
                ('email_host', models.CharField(blank=True, default='', max_length=200)),
                ('email_port', models.PositiveIntegerField(blank=True, null=True)),
                ('email_use_tls', models.BooleanField(default=True)),
                ('email_host_user', models.CharField(blank=True, default='', max_length=200)),
                ('email_host_password', models.CharField(blank=True, default='', help_text='Consider env vars instead of storing here.', max_length=200)),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('expense_date', models.DateField(default=django.utils.timezone.now)),
                ('period', models.CharField(choices=[('ONCE', 'One-time'), ('MONTHLY', 'Monthly'), ('YEARLY', 'Yearly')], default='ONCE', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='expenses/')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='expenses', to='core.expensecategory')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('bags_count', models.PositiveIntegerField(default=0)),
                ('extra_kg', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('notes', models.CharField(blank=True, max_length=255)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_receipts', to='core.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('CONFIRMED', 'Confirmed'), ('INPROD', 'In Production'), ('READY', 'Ready for Shipping'), ('DELIVERED', 'Delivered'), ('CLOSED', 'Closed')], default='DRAFT', max_length=12)),
                ('order_date', models.DateField(auto_now_add=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('payment_terms', models.CharField(blank=True, choices=[('NET7', 'Net 7'), ('NET14', 'Net 14'), ('NET30', 'Net 30'), ('NET45', 'Net 45'), ('CASH', 'Cash'), ('Bank Transfer', 'Bank Transfer')], max_length=20)),
                ('include_gst', models.BooleanField(default=True, help_text='Include GST for this order')),
                ('delivery_challan', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('delivery_challan_date', models.DateField(blank=True, null=True)),
                ('roll_size', models.CharField(default=0, max_length=50)),
                ('micron', models.CharField(help_text='Use syntax like 45/90 (not just a number).', max_length=20, null=True)),
                ('current_type', models.CharField(choices=[('NT', 'NT'), ('DT', 'DT'), ('ST', 'ST')], max_length=10, null=True)),
                ('target_total_kg', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=12)),
                ('material_deducted', models.BooleanField(default=False)),
                ('price_per_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('invoice_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('tolerance_kg', models.DecimalField(decimal_places=3, default=Decimal('0.500'), help_text='Allowed diff between produced and target at READY/DELIVERED/CLOSED', max_digits=6)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll_size', models.FloatField()),
                ('micron', models.CharField(max_length=10)),
                ('current_type', models.CharField(choices=[('NT', 'NT'), ('DT', 'DT'), ('ST', 'ST')], max_length=2)),
                ('roll_weight', models.FloatField()),
                ('quantity', models.IntegerField()),
                ('price_per_kg', models.FloatField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderRoll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight_kg', models.DecimalField(decimal_places=3, max_digits=7, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('barcode', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rolls', to='core.order')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received_on', models.DateField(default=django.utils.timezone.now)),
                ('method', models.CharField(choices=[('CASH', 'Cash'), ('CHEQUE', 'Cheque'), ('TRANSFER', 'Bank Transfer'), ('OTHER', 'Other')], default='TRANSFER', max_length=20)),
                ('reference', models.CharField(blank=True, max_length=64)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments_ar', to='core.customer')),
            ],
            options={
                'ordering': ['-received_on', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('P', 'Present'), ('A', 'Absent'), ('L', 'Leave'), ('H', 'Half Day')], default='P', max_length=1)),
                ('hours_worked', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('notes', models.CharField(blank=True, max_length=255)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='core.employee')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('employee', 'date')},
            },
        ),
        migrations.CreateModel(
            name='CustomerMaterialLedger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(choices=[('IN', 'In'), ('OUT', 'Out')], max_length=3)),
                ('delta_kg', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=12)),
                ('memo', models.CharField(blank=True, max_length=255)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_ledger', to='core.customer')),
                ('receipt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.materialreceipt')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_ledger_entries', to='core.order')),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('type', 'OUT')), fields=('order', 'type'), name='uniq_out_per_order')],
            },
        ),
        migrations.CreateModel(
            name='PaymentAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('applied_on', models.DateField(default=django.utils.timezone.now)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_allocations', to='core.order')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocations', to='core.payment')),
            ],
            options={
                'unique_together': {('payment', 'order')},
            },
        ),
        migrations.CreateModel(
            name='SalaryPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_month', models.PositiveSmallIntegerField()),
                ('period_year', models.PositiveIntegerField()),
                ('gross_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('payment_date', models.DateField(default=django.utils.timezone.now)),
                ('method', models.CharField(blank=True, default='Cash', max_length=40)),
                ('notes', models.TextField(blank=True)),
                ('slip', models.FileField(blank=True, null=True, upload_to='employees/salary_slips/')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_payments', to='core.employee')),
            ],
            options={
                'ordering': ['-period_year', '-period_month'],
                'unique_together': {('employee', 'period_month', 'period_year')},
            },
        ),
    ]
